/*
 * Application build file
 */

plugins {
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.26.0'
    // id 'org.beryx.runtime' version '1.13.0'
}

group = 'dwc'
version = '2.0.0'
description = 'Bellview'

javafx {
    version = "17.0.6"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing' ]
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

	
	implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
	implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'
	implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.3'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0'
	
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.0'
}

application {
    mainClass = "dwc.bellview.App"
    mainModule = "bellview"
}

eclipse {
    classpath {
    	downloadSources=true
    	downloadJavadoc = true
        file {
            whenMerged {
                entries.findAll { it.properties.kind.equals('lib') }.each {
                    it.entryAttributes['module'] = 'true'
                }
            }
        }
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--bind-services']

    launcher {
        noConsole = true
        name = 'bellview'
    }
    jpackage {
    	
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            imageOptions += ['--win-console', '--icon', 'src/main/resources/dwc/bellview/rie.ico']
        }
        else if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerOptions += ['--linux-package-name', 'bellview','--linux-shortcut']
            installerType = "deb"
            imageOptions += ['--icon', 'src/main/resources/dwc/bellview/rie.png']
        }
        else if (org.gradle.internal.os.OperatingSystem.current().macOsX) {
            installerOptions += ['--mac-package-name', 'bellview']
            imageOptions += ['--icon', 'src/main/resources/dwc/bellview/rie.icns']
        }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

def getDate() {
	// Get date in years month day hour minute format
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HHmmss')
    return formattedDate
}

processResources {
	// Update the messages file with the current build time and version
    filesMatching('**/messages.properties') {
    	filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [ APP_BUILD_TIME: getDate(), APP_VERSION_TOKEN: version])
    }
}

